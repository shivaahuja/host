{"version":3,"sources":["Fahrkosten.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Fahrkosten","useState","startTime","endTime","dauerInMin","dauerInSec","cost","setCost","Date","setStartButtonState","initialCost","setInitialCost","singleButtonState","preis","Math","ceil","toFixed","formatTime","time","localStorage","getItem","className","onClick","type","id","value","name","disabled","htmlFor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAuIeA,MAlIf,WAEI,MAAiCC,qBAAjC,mBAAMC,EAAN,KACA,GADA,KAC6BD,sBAA7B,mBAAME,EAAN,KACA,GADA,KACmCF,mBAAS,IAA5C,mBAAMG,EAAN,KACA,GADA,KACmCH,mBAAS,IAA5C,mBAAMI,EAAN,KACA,GADA,KACuBJ,mBAAS,IAAhC,mBAAMK,EAAN,KAAYC,EAAZ,KACA,EAAmCN,mBAAS,IAAIO,MAAhD,mBACA,GADA,UAC+BP,mBAAS,IAAIO,OAA5C,mBACA,GADA,UAC+CP,oBAAS,IAAxD,mBAAwBQ,GAAxB,WACA,EAA2CR,oBAAS,GAApD,mBACA,GADA,UAC2CA,oBAAS,IAApD,mBACA,GADA,UACqCA,mBAAS,IAA9C,mBAAMS,EAAN,KAAmBC,EAAnB,KACA,EAAiDV,oBAAS,GAA1D,mBAAMW,EAAN,KACIC,GADJ,KACYC,KAAKC,KAAKX,EAAWE,EAAMI,GAAaM,QAAQ,IAqE5D,SAASC,EAAWC,GAChB,OAAOA,EAAO,GAAP,WAAgBA,GAASA,EAIpC,OAxE6BC,aAAaC,QAAQ,SA0E9C,sBAAKC,UAAU,WAAf,UAEQ,sBAAKA,UAAU,WAAf,UACI,uBAAOC,QA5BvB,WACIf,EAAQ,GACRE,GAAoB,GACpBE,EAAe,IAyB6BY,KAAK,QAAQC,GAAG,WAAWC,MAAM,SAAUC,KAAK,cAAcC,SAAUf,IACxG,uBAAOY,GAAG,WAAWI,QAAQ,WAA7B,yBAEJ,sBAAKP,UAAU,WAAf,UACI,uBAAOC,QA1BvB,WACIf,EAAQ,GACRE,GAAoB,GACpBE,EAAe,IAuB6BY,KAAK,QAAQC,GAAG,WAAWC,MAAM,SAASC,KAAK,cAAcC,SAAUf,IACvG,uBAAOgB,QAAQ,WAAf,yBAEJ,sBAAKP,UAAU,WAAf,UACI,uBAAOC,QAxBvB,WACIf,EAAQ,GACRE,GAAoB,GACpBE,EAAe,IAqB6BY,KAAK,QAAQC,GAAG,WAAWC,MAAM,SAASC,KAAK,cAAcC,SAAUf,IACvG,uBAAOgB,QAAQ,WAAf,yBAGJ,qBAAKP,UAAU,QAMf,qBAAKA,UAAU,QAEf,sBAAKA,UAAU,cAAf,UACA,8CAAiBR,EAAjB,aAGI,oBAAGW,GAAG,KAAKC,MAAM,KAAjB,yBAAmCvB,KACnC,oBAAGsB,GAAG,KAAN,uBAAsBrB,KACtB,oBAAGqB,GAAG,KAAN,wBAAuBP,EAAWb,EAAWY,QAAQ,IAArD,IAA2DC,EAAWZ,EAAWW,QAAQ,IAAzF,OACA,oBAAGQ,GAAG,KAAN,8BAA6BlB,EAA7B,oBC5GLuB,EAXH,WACR,OACI,8BAEY,cAAC,EAAD,OCELC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e85bc18c.chunk.js","sourcesContent":["import React, { useEffect, useState} from 'react';\r\n\r\n\r\n\r\n\r\nfunction Fahrkosten () {\r\n\r\n    const[startTime, setStarttime] = useState();\r\n    const[endTime, setEndtime] = useState();\r\n    const[dauerInMin, setDauerInMin] = useState(0);\r\n    const[dauerInSec, setDauerInSec] = useState(0);\r\n    const[cost, setCost] = useState(0);\r\n    const[startTime2, setStarttime2] = useState(new Date());\r\n    const[endTime2, setEndtime2] = useState(new Date());\r\n    const[startButtonState, setStartButtonState] = useState(true);\r\n    const[endButtonState, setEndButtonState] = useState(true);\r\n    const[startTripState, setStartTripState] = useState(true);\r\n    const[initialCost, setInitialCost] = useState(0);\r\n    const[singleButtonState, setSingleButtonState] = useState(false);\r\n    var preis = Math.ceil(dauerInMin*cost+ initialCost).toFixed(2);\r\n    const currentTrip = [startTime, endTime, preis];\r\n    const localStorageContent = [localStorage.getItem('Trips')];\r\n    var allTrips = [];\r\n    \r\n    \r\n\r\n    function startTripTime(){\r\n        setStarttime2(new Date())\r\n        setStarttime(new Date().toLocaleTimeString())\r\n        setStartButtonState(true)\r\n        setEndButtonState(false)\r\n        setSingleButtonState(true)\r\n       \r\n    }\r\n\r\n    function endTripTime(){\r\n        setEndtime2(new Date())\r\n        setEndtime(new Date().toLocaleTimeString())\r\n        setDauerInSec((Math.abs(endTime2-startTime2)/(1000))%60);\r\n        setDauerInMin((Math.abs(endTime2-startTime2)/(1000 * 60))%60);\r\n        \r\n        setEndButtonState(true)\r\n        setStartTripState(false)\r\n        \r\n\r\n    }\r\n\r\n    function startNewTrip(){\r\n        setStartButtonState(false)\r\n        setStartTripState(true)\r\n        setStarttime()\r\n        setEndtime()\r\n        setDauerInMin(0)\r\n        setDauerInSec(0)\r\n        setSingleButtonState(false)\r\n        \r\n    }\r\n\r\n    function addMin(){\r\n        setDauerInMin(dauerInMin+ 5)\r\n        console.log(dauerInMin)\r\n    }\r\n\r\n    function saveTrip(){\r\n        allTrips.push(currentTrip)\r\n        \r\n        localStorage.setItem('Trips',(allTrips))\r\n        console.log(allTrips)\r\n    }\r\n\r\n    function changePriceTo1(){\r\n        setCost(1)\r\n        setStartButtonState(false)\r\n        setInitialCost(1)\r\n    }\r\n\r\n    function changePriceTo2(){\r\n        setCost(2)\r\n        setStartButtonState(false)\r\n        setInitialCost(2)\r\n    }\r\n\r\n    function changePriceTo3(){\r\n        setCost(3)\r\n        setStartButtonState(false)\r\n        setInitialCost(3)\r\n    }\r\n\r\n    function formatTime(time){\r\n        return time < 10 ? `0${time}` : time;\r\n    }\r\n    \r\n\r\n    return (\r\n      \r\n        <div className=\"formbody\">\r\n            \r\n                <div className=\"Scooter1\">\r\n                    <input onClick={changePriceTo1} type=\"radio\" id=\"scooter1\" value=\"style1\"  name=\"scootertype\" disabled={singleButtonState} />\r\n                    <label id=\"scooter1\" htmlFor=\"scooter1\">scooter1</label>\r\n                </div>\r\n                <div className=\"Scooter2\">\r\n                    <input onClick={changePriceTo2} type=\"radio\" id=\"scooter2\" value=\"style2\" name=\"scootertype\" disabled={singleButtonState} />\r\n                    <label htmlFor=\"scooter2\">scooter2</label>\r\n                </div>\r\n                <div className=\"Scooter3\">\r\n                    <input onClick={changePriceTo3} type=\"radio\" id=\"scooter3\" value=\"style3\" name=\"scootertype\" disabled={singleButtonState} />\r\n                    <label htmlFor=\"scooter3\">scooter3</label>\r\n                </div>\r\n            \r\n                <div className=\"clr\"></div>\r\n                \r\n        \r\n            \r\n                \r\n                \r\n                <div className=\"clr\"></div>\r\n\r\n                <div className=\"information\">               \r\n                <h1>Fahrkosten: {preis}€ </h1>\r\n\r\n                   {/* <p1>Current time{time}</p1> */}\r\n                    <p id='p1' value='p1'>Start time: {startTime}</p>\r\n                    <p id='p2'>End time: {endTime}</p>\r\n                    <p id='p3'>Trip Time: {formatTime(dauerInMin.toFixed(0))}:{formatTime(dauerInSec.toFixed(0))} </p>\r\n                    <p id='p4'>Cost per Minute: {cost} €</p>\r\n            </div>\r\n  \r\n                                      \r\n        </div>\r\n            )\r\n        }\r\n\r\n\r\n\r\nexport default Fahrkosten;\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport Fahrkosten  from './Fahrkosten';\r\n\r\n\r\n\r\nconst App = () => {\r\n    return(\r\n        <div>\r\n          \r\n                    <Fahrkosten />\r\n     \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}